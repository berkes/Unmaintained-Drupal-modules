<?php
// $Id$

/**
 * @file
 * use ideal_payment_api to buy credits for node_creation_credits module
 * @author Bèr Kessels  <ber@webschuur.com   >
 * @link http://webschuur.com
 * @package ideal_payment_credits
 */

/* -----------------------------------------------------------------

  Hook Implementations

------------------------------------------------------------------ */

/**
 * Implementation of hook_perm().
 */
function ideal_payment_credits_perm() {
  return array('administer ideal_payment_credits');
}

/**
 * Implementation of hook_ideal_payed. Inserts the credits into the system when payment was successfull.
 * @param $order_data
 * @return unknown_type
 */
function ideal_payment_credits_ideal_payed($order_data) {
  $order = ideal_payment_credits_order_get($order_data['order_id']);
  
  node_creation_credits_add($order->users_uid, $order->amount, 'ideal payment');
}

/**
 * Implementation of hook_menu().
 */
function ideal_payment_credits_menu() {
  $items = array();

  $items['admin/settings/ideal_payment_credits_settings'] = array(
    'title' => t('Ideal payment credits settings'),
    'description' => t('Settings for error page and success page for iDEAL'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ideal_payment_credits_settings'),
    'access arguments' => array('administer ideal_payment_credits'),
    'file' => 'ideal_payment_credits.admin.inc',
  );
  $items['admin/settings/ideal_payment_credits_staffel'] = array(
    'title' => t('Ideal payment staffel'),
    'description' => t('Staffel. Define how much batches of credits cost.'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ideal_payment_credits_staffel'),
    'access arguments' => array('administer ideal_payment_credits'),
    'file' => 'ideal_payment_credits.admin.inc',
  );
  $items['ideal_payment_credits/order'] = array(
    'title' => t('Add credits'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ideal_payment_credits_order_page'),
    'access arguments' => array('make iPAPI payments'),
  );
  $items['ideal_payment_credits/bank'] = array(
    'title' => t('Add credits'),
    'page callback' => 'ideal_payment_credits_bank_page',
    'access callback' => 'ideal_payment_credits_has_session',
    'type' => MENU_CALLBACK, //user has passed and saved the form in ../order
  );
  return $items;
}

/**
 * Implementation of hook_theme().
 */
function ideal_payment_credits_theme($existing, $type, $theme, $path) {
  return array(
    'forum_topic_navigation' => array(
      'arguments' => array('node' => NULL),
    ),
  );
}

/**
 * Menu callback function: renders the payment page!
 */
function ideal_payment_credits_order_page($form_state) {

    //Accountname
    global $user;
    $form['info']['username'] = array(
      '#value' => t('Account name: !username', array('!username' => theme('username', $user))),
      '#suffix' => '<br />',
    );
    $form['info']['user'] = array(
      '#type' => 'value',
      '#value' => $user,
    );
    //Current amount
    $form['info']['amount'] = array(
      '#value' => t('Current amount: %amount', array('%amount' => node_creation_credits_get_amount_for_user($user))),
    );
    
    foreach (ideal_payment_credits_get_staffel() as $amount => $costs) {
      $options[$costs] = t('%amount at €%costs' , array('%amount' => $amount, '%costs' => $costs));
    }
    
    $form['amount'] = array(
      '#type' => 'radios',
      '#title' => t('Buy credits'),
      '#options' => $options,
    );
    
    $form['actions'] = array(
    	'#prefix' => '<div class="container-inline">',
    	'#suffix' => '</div>',
    );
    $form['actions']['submit'] = array(
    	'#type' => 'submit',
    	'#value' => t('Pay with iDEAL'),
    );

  return $form;
}

function ideal_payment_credits_order_page_submit($form, &$form_state) {
  $values = $form_state['values']; //less writing
  $staffel = ideal_payment_credits_get_staffel();
  $price = $values['amount'];
  $amount = array_search($price, $staffel);
  
  $order_id = ideal_payment_credits_order_insert($values['user']->uid, $amount, $price);

  //Fill TransReq session var
  $_SESSION['ideal_payment_credits_order_data'] = array(
    'order_id' => $order_id,
    'order_total' => $price,
    'amount' => $amount,
  );
  
  $form_state['redirect'] = 'ideal_payment_credits/bank';
}

function ideal_payment_credits_bank_page() {
  $order_desc = t('@number credits for @sitename', array('@number' => $_SESSION['ideal_payment_credits_order_data']['amount'], '@sitename' => variable_get('site_name', '')));
  $order_id = $_SESSION['ideal_payment_credits_order_data']['order_id'];
  $order_total = $_SESSION['ideal_payment_credits_order_data']['order_total'];
  
  $path_back_error = variable_get('ideal_payment_credits_path_error', '');
  $path_back_succes = variable_get('ideal_payment_credits_path_success', '');
  
  return ideal_payment_api_payment_page($order_id, $order_desc, $order_total, $path_back_error, $path_back_succes);
}

/**
 * return an array of staffelcosts
 */
function ideal_payment_credits_get_staffel() {
  $staffel = array();
  for ($i = 1; $i <= 10; $i++) {
    if (($amount = variable_get('ideal_payment_credits_staffel_amount_'. $i, '')) && 
        ($costs = variable_get('ideal_payment_credits_staffel_costs_'. $i, ''))) {
      $staffel[$amount] = $costs;
    }
  }
  return $staffel;
}

function ideal_payment_credits_order_insert($users_uid, $amount, $price) {
  $now = time();
  db_query('INSERT into {ideal_payment_credits_orders} 
  	(users_uid, amount, price, created_at, updated_at) VALUES
  	(%d, %d, %d, %d, %d)',
    $users_uid, $amount, $price, $now, $now);

  return db_last_insert_id('ideal_payment_credits_orders', 'id');
}

/**
 * Gets an order by its id from the database
 * @param $order_id
 * @return $order object
 */
function ideal_payment_credits_order_get($order_id) {
  $res = db_query('SELECT * FROM {ideal_payment_credits_orders} WHERE id = %d', $order_id);

  return db_fetch_object($res);
}

function ideal_payment_credits_has_session() {
  if (isset($_SESSION['ideal_payment_credits_order_data']) || isset($_SESSION['ideal_payment_api_order_data'])) {
    return TRUE;
  }
  else {
    return FALSE;
  }
}
